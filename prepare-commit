#/usr/local/bin bash

# github account of committer (you!)
COMMITTER=nickwallen

# not likely to change
WORK=~/tmp
UPSTREAM=https://git-wip-us.apache.org/repos/asf/incubator-metron.git

# retrieve the pull request identifier
read -p "  pull request: " PR
if [ -z "$PR" ]; then
  echo "Error: missing pr"
  exit 1
fi

# github account of committer
read -p "  your github username [$COMMITTER]: "
[ -n "$INPUT" ] && COMMITTER=$INPUT

ORIGIN="http://github.com/apache/incubator-metron"
read -p "  origin repo [$ORIGIN]: "
[ -n "$INPUT" ] && ORIGIN=$INPUT

# ensure that the pull request exists
PR_EXISTS=`curl -sI https://api.github.com/repos/apache/incubator-metron/pulls/$PR | grep Status: | sed 's/[^0-9]//g'`
if [ "$PR_EXISTS" != "200" ]; then
  echo "Error: pull request #$PR does not exist"
  exit 1
fi

# use github api to retrieve the contributor's login
USER=`curl -s https://api.github.com/repos/apache/incubator-metron/pulls/$PR | grep login | head -1 | awk -F":" '{print $2}' | sed 's/[^a-zA-Z.@]//g'`
read -p "  github contributor's username [$USER]: " INPUT
[ -n "$INPUT" ] && USER=$INPUT

# validate the github contributor
if [ -z "$USER" ]; then
  echo "Error: missing username"
  exit 1
fi

# attempt to use the github api to retrieve the user's email
EMAIL=`curl -s https://api.github.com/users/$USER | grep email | awk -F":" '{print $2}' | sed 's/[^a-zA-Z.@]//g'`
read -p "  github contributor's email [$EMAIL]: " INPUT
[ -n "$INPUT" ] && EMAIL=$INPUT

# validate email
if [ -z "$EMAIL" ]; then
  echo "Error: missing email"
  exit 1
fi

# can we extract the JIRA from the PR title?
JIRA=`curl -s https://api.github.com/repos/apache/incubator-metron/pulls/$PR | grep title | head -1 | egrep -o 'METRON-[0-9]+'`
read -p "  issue identifier in jira [$JIRA]: " INPUT
[ -n "$INPUT" ] && JIRA=$INPUT

# validate the JIRA issue
if [ -z "$JIRA" ]; then
  echo "Error: missing jira"
  exit 1
fi

# attempt to use the jira api to get a description of the jira
DESC=`curl -s https://issues.apache.org/jira/si/jira.issueviews:issue-xml/$JIRA/$JIRA.xml | grep "<summary>" | sed 's/^.*<summary>//' | sed 's/<.summary>.*$//'`
read -p "  issue description [$DESC]: " INPUT
[ -n "$INPUT" ] && DESC=$INPUT

# validate description
if [ -z "$DESC" ]; then
  echo "Error: missing description"
  exit 1
fi

# commit message
AUTHOR="$USER <$EMAIL>"
if [ "$USER" == "$COMMITTER" ]; then
    MSG="$JIRA $DESC ($USER) closes apache/incubator-metron#$PR"
else
    MSG="$JIRA $DESC ($USER via $COMMITTER) closes apache/incubator-metron#$PR"
fi
read -p "  commit message [$MSG]: " INPUT
[ -n "$INPUT" ] && MSG=$INPUT

# confirm then prepare the merge and commit
echo ""
read -p "Use 'PR#$PR' to resolve '$JIRA'? [N/y] " REPLY
if [[ $REPLY =~ ^[Yy]$ ]]
then

  echo ""
  echo "----> clone origin and fetch upstream <---- "
  mkdir -p $WORK
  cd $WORK
  rm -rf $WORK/incubator-metron

  # clone the repository and fetch updates
  git clone $ORIGIN incubator-metron
  cd $WORK/incubator-metron

  # setup the git user and email for your apache account
  git config user.name "YOUR NAME as In Apache"
  git config user.email YOU@apache.org

  git remote add upstream $UPSTREAM
  git fetch upstream master

  echo ""
  echo "----> merge upstream with origin <---- "
  # update origin/master
  git checkout master
  git merge upstream/master

  # pull the contributor's branch and commit
  echo ""
  echo "----> ready to commit <----"
  git pull --squash origin pull/$PR/head:pr-$PR
  #git pull --squash http://github.com/$USER/incubator-metron $BRANCH
  git commit --author="$AUTHOR" -a -m "$MSG"

  # review the commit
  echo ""
  echo "----> commit complete <----"
  git diff --stat --color master..upstream/master
  git log -2

  echo ""
  echo "Review commit carefully then run..."
  echo "    cd $WORK/incubator-metron"
  echo "    git push upstream master"
fi
